"use strict";function mainService(a,b){function c(a){if(e(),null==a||""==a){var b="One or more Git user names are required!";f(b)}else{var c=d(a).split(" ");1===c.length?g(c[0]):h(c)}}function d(a){return a.replace(/^\s+|\s+$/gm,"")}function e(){k.showErrors.state=!1,k.showRepos.state=!1,k.showStars.state=!1}function f(a){k.errorMsg.text=a,k.showErrors.state=!0}function g(b){var c,d="https://api.github.com/users/"+b+"/repos?sort=stars&order=desc";a.get(d).success(function(a){if(0===a.length||"Not Found"==a.message)c="Sorry, but that user does not exist on Github!",f(c);else{var b=[];for(var d in a)b.push({name:a[d].name,stars:a[d].stargazers_count});k.repoResults.data=b,k.showRepos.state=!0}}).error(function(){c="Ooops, it looks like the server is down!",f(c)})}function h(c){function d(b){var c=a({method:"GET",url:b});return c}for(var e=[],f=0;f<c.length;f++){var g="https://api.github.com/users/"+c[f]+"/repos";e.push(d(g))}b.all(e).then(function(a){for(var b=[],d=0;d<a.length;d++)if(400==a[d].status)b.push({user:c[d],starCount:"Server Error"});else if(0===a.length||"Not Found"==a.message)b.push({user:c[d],starCount:"No Such User"});else{var e=i(a[d]);b.push({user:c[d],starCount:e})}j(b),k.starResults.data=b})}function i(a){for(var b=0,c=0;c<a.data.length;c++)b+=a.data[c].stargazers_count;return b}function j(a){for(var b,c=[],d=0,e=0;e<a.length;e++)isNaN(a[e].starCount)||(a[e].starCount>d?(c=[a[e].user],d=a[e].starCount):a[e].starCount==d&&c.push(a[e].user));1===c.length?b=c[0]+" has got the most stars!":c.length>1&&(b="These guys have got the most stars: "+mostStar.join()),k.starMsg.text=b,k.showStars.state=!0}var k={showErrors:{state:!1},errorMsg:{text:""},showRepos:{state:!1},showStars:{state:!1},userCount:{data:0},starMsg:{text:""},starResults:{data:{}},repoResults:{data:{}},init:c};return k}mainService.$inject=["$http","$q"],function(){function a(a){var b=this;b.showErrors=a.showErrors,b.errorMsg=a.errorMsg,b.showRepos=a.showRepos,b.showStars=a.showStars,b.userCount=a.userCount,b.starMsg=a.starMsg,b.starResults=a.starResults,b.repoResults=a.repoResults,b.init=a.init}angular.module("con.main",["ui.router"]).factory("mainService",mainService).controller("MainCtrl",a).config(["$stateProvider",function(a){a.state("main",{url:"/",templateUrl:"views/main/main.html",controller:"MainCtrl",controllerAs:"vm"})}]),a.$inject=["mainService"]}(),function(){angular.module("con",["ui.router","con.main"]).config(["$urlRouterProvider",function(a){a.otherwise("/")}])}();